plugins {
    id 'com.android.application'
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "org.sonarqube" version "3.4.0.2513"
    id 'org.jlleitschuh.gradle.ktlint' version '11.3.2'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

sonarqube {
    properties {
        property "sonar.projectKey", "lneugebauer_nextcloud-cookbook"
        property "sonar.organization", "lneugebauer"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

android {
    if (keystoreProperties.containsKey('storeFile')) {
        signingConfigs {
            upload {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "de.lukasneugebauer.nextcloudcookbook"
        minSdk 23
        targetSdk 33
        versionCode 14
        versionName "0.8.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            debuggable true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig keystoreProperties.containsKey('storeFile') ? signingConfigs.upload : signingConfigs.debug
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'de.lukasneugebauer.nextcloudcookbook'
}

configurations {
    ktlint
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.core:core-splashscreen:1.0.0'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation 'com.google.code.gson:gson:2.10'

    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation platform('com.squareup.okhttp3:okhttp-bom:4.9.3')
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'

    implementation 'io.coil-kt:coil-compose:1.4.0'

    implementation "com.dropbox.mobile.store:store4:$store_version"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation "com.github.alorma:compose-settings-ui:$compose_settings_version"
    implementation "com.github.alorma:compose-settings-storage-preferences:$compose_settings_version"

    implementation "io.github.raamcosta.compose-destinations:core:$compose_destinations_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_destinations_version"

    implementation 'com.github.haroldadmin:NetworkResponseAdapter:5.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'
}

kapt {
    correctErrorTypes true
}

ktlint {
    android.set(true)
    outputColorName.set("RED")
}


//task ktlint(type: JavaExec, group: "verification") {
//    description = "Check Kotlin code style."
//    classpath = configurations.ktlint
//    mainClass.set("com.pinterest.ktlint.Main")
//    args "src/**/*.kt"
//    // to generate report in checkstyle format prepend following args:
//    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
//    // to add a baseline to check against prepend following args:
//    // "--baseline=ktlint-baseline.xml"
//    // see https://github.com/pinterest/ktlint#usage for more
//}
/*
check.dependsOn ktlint
*/

